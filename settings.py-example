# -*- coding: utf-8 -*-
# vim: set noai noexpandtab sts=0:

import locale
from urlparse import urlparse


# Note: There are settings in `wishlist.xslt` too!


##
## Edit your wishlists settings:
##

# Specify which products will be considered on-budget.
#   These are just defaults differentiated by product priority.
#
#   NOTE: You can override this for individual products by having something 
#   like "{if $80.50}" or "{ab 5,10 Euro}" or "{12}" or "{yAdda 55.42 yaDdA}"
#   somewhere in a product comment on your Amazon wishlist,
#   In comments, use a price number format according to your locale.
#   
#   Specifying a price below 0 means never on budget (can be used for exclusion).
#   The XML output-file, however, will contain all products but annotated 
#   with a negative buy-price. The viewer, however, hides such products.
#
WISHLISTS_BUYPRICES = {
	# Pty : Price     # Priority name on Amazon:
	-2    :   -1,     # "Don't buy this for me"
	-1    :   -1,     # ""
	 0    :   10.0,   # "Normal"
	 1    :   15.0,   # ""
	 2    :   20.0    # "Must have"
}

# Specify any of your wishlist URLs.
#   The program will find all your other wishlists through this URL.
#   Todo: How to get a *public* Amazon-Wishlist-link.
#   Use an absolute URL starting with 'https':
#
WISHLISTS_URL_ANY = 'https://www.amazon.de/hz/wishlist/ls/EXAMPLE1/ref=cm_go_nav_hz'

# By default, we export all your wishlists, but we can exclude some lists here.
#   Mabye, you only want lists with books but not clothes or computer hardware.
#   Use absolute wishlist URLs starting with 'https':
#
WISHLISTS_EXCLUDES = [
	'https://www.amazon.de/hz/wishlist/ls/EXAMPLE2/',  # My list 1
	'https://www.amazon.de/hz/wishlist/ls/EXAMPLE3/'   # My list 2
]

# Name of the exported file. 
#   If you change the name, you have to rename wishlist.xslt accordingly.
#   Rename if you want to use a custom XSLT-file which is not overwritten 
#   by the very next program update. Your custom XSLT-file can also link
#   a custom CSS-file other than 'wishlist.css'.
#   Default: './wishlist.xml'
#
WISHLISTS_XMLPATH = './wishlist.xml'


##
## Edit your localization settings:
##
DEFAULT_REQUEST_HEADERS = { 'Accept-Language': 'de' }    # RFC 5646 language tags:  'de', 'en', ... 
locale.setlocale( locale.LC_ALL, 'de_DE' )               # Locale values: 'de_DE', 'en_US', 'en_GB', ...
AMAZON_HOST = urlparse( WISHLISTS_URL_ANY ).netloc       # Don't change.


##
## You can ignore these scraper settings:
##
SCRAPY_SETTINGS = {
	'DOWNLOAD_DELAY'         : 3.0,  # Seconds
	'CONCURRENT_REQUESTS'    : 1,
	'DOWNLOADER_MIDDLEWARES' :
	{
		'scrapy.contrib.downloadermiddleware.useragent.UserAgentMiddleware': None,
		'wishlist.RandomUserAgentMiddleware': 400
	},
	#'DOWNLOADER_MIDDLEWARES' : {
	#	'scrapy.downloadermiddlewares.httpcache.HttpCacheMiddleware': None,
	#	'scrapy_httpcache.downloadermiddlewares.httpcache.AsyncHttpCacheMiddleware': 900,
	#},
	#'HTTPCACHE_ENABLED' : True,
	#'HTTPCACHE_STORAGE' : 'scrapy.extensions.httpcache.FilesystemCacheStorage',
	#'HTTPCACHE_POLICY'  : 'scrapy.extensions.httpcache.DummyPolicy',
	#'HTTPCACHE_IGNORE_HTTP_CODES' = [301, 302, 500, 503],
}

